<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Your title</title>
    <link>https://zhaoyuan0218.github.io/post/</link>
    <description>Recent content in Posts on Your title</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Oct 2020 16:47:33 +0800</lastBuildDate>
    
	<atom:link href="https://zhaoyuan0218.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Springmvc项目（一）：搭建框架</title>
      <link>https://zhaoyuan0218.github.io/post/springmvc/</link>
      <pubDate>Fri, 30 Oct 2020 16:47:33 +0800</pubDate>
      
      <guid>https://zhaoyuan0218.github.io/post/springmvc/</guid>
      <description>一、创建Maven项目
1、IDEA-&amp;gt;File-&amp;gt;New-&amp;gt;Project创建一个项目
2、创建出来的目录结构如下：
3、其中部分目录是手工创建的，例如controller、testpage.java、resources、weapp等。
resources文件夹：一般用来存放一些资源文件
webapp文件夹：用来存放web配置文件以及jsp页面
4、将src/main/java目录标记为Sources Root
二、用Maven导入jar包
Maven项目对象模型（POM），配置pom.xml，内容如下
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;org.example&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;myproject&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-web&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.3.14.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.3.14.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-tx&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.3.14.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jackson-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.8.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jackson-annotations&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.8.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jackson-databind&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.8.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;build&amp;gt; &amp;lt;finalName&amp;gt;zy.test&amp;lt;/finalName&amp;gt; &amp;lt;/build&amp;gt; &amp;lt;/project&amp;gt; 三、创建SpringMvc框架
myproject/src/main/webapp/WEB-INF/web.xml
&amp;lt;!DOCTYPE web-app PUBLIC &amp;#34;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;#34; &amp;#34;http://java.sun.com/dtd/web-app_2_3.dtd&amp;#34; &amp;gt; &amp;lt;web-app&amp;gt; &amp;lt;display-name&amp;gt;Archetype Created Web Application&amp;lt;/display-name&amp;gt; &amp;lt;servlet&amp;gt; &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt; &amp;lt;servlet-class&amp;gt;org.</description>
    </item>
    
    <item>
      <title>如何利用github Pages和hugo搭建个人博客？</title>
      <link>https://zhaoyuan0218.github.io/post/blog/</link>
      <pubDate>Tue, 08 Sep 2020 17:47:09 +0800</pubDate>
      
      <guid>https://zhaoyuan0218.github.io/post/blog/</guid>
      <description>基本概念  GitHub Pages是一个静态站点托管服务，直接将个人、组织或项目的页面托管于 GitHub 库或仓库 (repository) 中。 Hugo 是一个用 Go 语言编写的静态站点生成器，它针对速度、易用性和可配置性进行了优化，快速灵活。  搭建步骤 hugo生成静态站点  cd ${workspace} hugo new site zy-blog cd zy-blog Choose a theme from https://themes.gohugo.io/, I like https://themes.gohugo.io/hugo-theme-m10c/ cd theme &amp;amp;&amp;amp; git clone https://github.com/vaga/hugo-theme-m10c.git m10c 将themes/m10c/exampleSite/config.toml复制到根目录zy-blog下 修改config.yml里的baseURL = “https://zhaoyuan0218.github.io/&amp;quot;(这个值为后面github里的repo)和themesDir = “../..“注释掉（因为config.yml的路径变化了） 在根目录zy-blog下hugo server -D，浏览器打开http://localhost:1313/预览，看是否符合预期 在根目录zy-blog下hugo构建静态站点，打包到public  github pages配置  登录github.com，新建repositories：zhaoyuan0218.github.io cd zy-blog/public去关联此repositories git init ：此时会发现public下多了一个.git目录 git remote add origin git@github.com:zhaoyuan0218/zhaoyuan0218.github.io.git git add . git commit -m “template” git push origin master 浏览器打开zhaoyuan0218.</description>
    </item>
    
    <item>
      <title>Java细节</title>
      <link>https://zhaoyuan0218.github.io/post/java/</link>
      <pubDate>Tue, 08 Sep 2020 12:35:28 +0800</pubDate>
      
      <guid>https://zhaoyuan0218.github.io/post/java/</guid>
      <description>for和foreah中的return public static void testReturn() { List&amp;lt;Integer&amp;gt; l = new ArrayList&amp;lt;&amp;gt;(); l.add(1); l.add(2); l.add(3); l.stream().forEach(h-&amp;gt;{ System.out.println(h); if(h== 2){ return; } System.out.println(&amp;#34;after if:h=&amp;#34;+h); }); System.out.println(&amp;#34;xxx&amp;#34;); } public static void testReturn2() { for(int i=1;i&amp;lt;4;i++){ System.out.println(i); if(i==2){ return; } System.out.println(&amp;#34;after if:i=&amp;#34;+i); } System.out.println(&amp;#34;xxx&amp;#34;); } 输出：
1 after if:h=1 2 3 after if:h=3 xxx 1 after if:i=1 2 解释：
 forEach走到return后，相当于跳过本次forEach,继续下一次forEach； for走到return后，直接跳到调用函数处  </description>
    </item>
    
  </channel>
</rss>